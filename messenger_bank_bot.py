from flask import Flask, request
import requests, random, time

app = Flask(__name__)

# === ƒêI·ªÄN TOKEN C·ª¶A B·∫†N ·ªû ƒê√ÇY ===
VERIFY_TOKEN = "mySuperSecretToken123"
PAGE_ACCESS_TOKEN = "EAAfALhUeIpoBO614HYFkT3t0SfZAuqZAfNY4ZACusoEciFrQW06VmdigNjRWIZCCZB0itcpEyTVqGhsn55vJpTRvpgDJIJzG4IOL2dholW2gnwRKwynVVpXxH3PWdNZBiyPZBci7LsEQMt3JAhtI6qbD1MvQSKgUQoT6VpyE8bpMd72GOmT7IBH4j6VQEp9jAt3ID0dFnYgpikqLelMbBHtobcsNQZDZD"
# ================================

users = {}
debts = {}
last_game_time = {}

def send_message(recipient_id, text):
    url = "https://graph.facebook.com/v17.0/me/messages"
    params = {"access_token": PAGE_ACCESS_TOKEN}
    headers = {"Content-Type": "application/json"}
    body = {
        "recipient": {"id": recipient_id},
        "message": {"text": text}
    }
    requests.post(url, params=params, json=body, headers=headers)

def create_account(uid, name):
    if uid in users:
        return False
    taken = {u["account"] for u in users.values()}
    acc = next(i for i in range(1, 101) if i not in taken)
    users[uid] = {"name": name, "balance": 100_000_000, "account": acc}
    debts[uid] = 0
    return True

@app.route("/", methods=["GET"])
def root():
    return "Messenger Bank Bot is running."

@app.route("/webhook", methods=["GET","POST"])
def webhook():
    if request.method == "GET":
        token = request.args.get("hub.verify_token")
        if token == VERIFY_TOKEN:
            return request.args.get("hub.challenge")
        return "Verification token mismatch", 403

    data = request.json
    for entry in data.get("entry", []):
        for ev in entry.get("messaging", []):
            uid = ev["sender"]["id"]
            if "message" in ev and "text" in ev["message"]:
                text = ev["message"]["text"].strip()
                handle(uid, text)
    return "ok", 200

def handle(uid, txt):
    parts = txt.split()
    cmd = parts[0].lower()
    args = parts[1:]

    # T·∫°o t√†i kho·∫£n
    if cmd == "!tao":
        name = " ".join(args) if args else f"User{uid[-4:]}"
        if create_account(uid, name):
            acc = users[uid]["account"]
            send_message(uid, f"‚úÖ T·∫°o t√†i kho·∫£n th√†nh c√¥ng!\nT√™n: {name}\nSTK: {acc}\nS·ªë d∆∞: 100,000,000$")
        else:
            send_message(uid, "‚ùå B·∫°n ƒë√£ c√≥ t√†i kho·∫£n r·ªìi.")
        return

    # Ch∆∞a c√≥ t√†i kho·∫£n
    if uid not in users:
        send_message(uid, "‚ùå B·∫°n ch∆∞a c√≥ t√†i kho·∫£n! D√πng !tao <t√™n> ƒë·ªÉ t·∫°o.")
        return

    user = users[uid]

    if cmd == "!bank":
        send_message(uid, f"üí∞ S·ªë d∆∞ hi·ªán t·∫°i: {user['balance']:,}$")

    elif cmd == "!vay" and args:
        amt = int(args[0].replace(",", ""))
        if debts[uid] > 0:
            send_message(uid, "‚ö†Ô∏è B·∫°n c√≤n n·ª£ c≈©, ph·∫£i tr·∫£ h·∫øt tr∆∞·ªõc khi vay m·ªõi.")
        elif 10_000_000 <= amt <= 1_000_000_000:
            debt = int(amt * 1.1)
            user["balance"] += amt
            debts[uid] = debt
            send_message(uid, f"‚úÖ ƒê√£ vay {amt:,}$. N·ª£ c·∫ßn tr·∫£: {debt:,}$.")
        else:
            send_message(uid, "‚ùå S·ªë ti·ªÅn vay ph·∫£i t·ª´ 10 tri·ªáu ƒë·∫øn 1 t·ª∑.")
    
    elif cmd == "!travay":
        if debts[uid] == 0:
            send_message(uid, "‚úÖ B·∫°n kh√¥ng c√≥ n·ª£.")
        elif args and args[0].lower() == "all":
            if user["balance"] >= debts[uid]:
                user["balance"] -= debts[uid]
                send_message(uid, f"‚úÖ Tr·∫£ h·∫øt n·ª£ {debts[uid]:,}$.")
                debts[uid] = 0
            else:
                send_message(uid, "‚ùå Kh√¥ng ƒë·ªß ti·ªÅn ƒë·ªÉ tr·∫£ h·∫øt n·ª£.")
        elif args:
            pay = int(args[0])
            pay = min(pay, debts[uid])
            if user["balance"] >= pay:
                user["balance"] -= pay
                debts[uid] -= pay
                send_message(uid, f"‚úÖ ƒê√£ tr·∫£ {pay:,}$. N·ª£ c√≤n l·∫°i: {debts[uid]:,}$.")
            else:
                send_message(uid, "‚ùå Kh√¥ng ƒë·ªß ti·ªÅn ƒë·ªÉ tr·∫£.")
        else:
            send_message(uid, "‚ùå C√∫ ph√°p: !travay all ho·∫∑c !travay <s·ªë ti·ªÅn>")

    elif cmd == "!chuyen" and len(args)==2:
        to_acc = int(args[0])
        amt = int(args[1])
        if amt>0 and user["balance"]>=amt:
            dest = next((k for k,v in users.items() if v["account"]==to_acc), None)
            if dest:
                user["balance"] -= amt
                users[dest]["balance"] += amt
                send_message(uid, f"‚úÖ Chuy·ªÉn {amt:,}$ ƒë·∫øn STK {to_acc}.")
            else:
                send_message(uid, "‚ùå Kh√¥ng t√¨m th·∫•y STK ƒë√≥.")
        else:
            send_message(uid, "‚ùå S·ªë d∆∞ kh√¥ng ƒë·ªß ho·∫∑c sai c√∫ ph√°p.")

    elif cmd == "!tx" and len(args)==2:
        choice = args[0].lower()
        bet = int(args[1])
        if choice in ("t√†i","x·ªâu") and user["balance"]>=bet:
            dice = [random.randint(1,6) for _ in range(3)]
            total = sum(dice)
            res = "t√†i" if total>10 else "x·ªâu"
            win = (choice==res)
            user["balance"] += bet if win else -bet
            send_message(uid, f"üé≤ {dice}={total} => {res.upper()}\nB·∫°n {'üèÜ th·∫Øng' if win else 'üíî thua'} {bet:,}$.")
        else:
            send_message(uid, "‚ùå C√∫ ph√°p: !tx t√†i/x·ªâu <s·ªë ti·ªÅn> ho·∫∑c kh√¥ng ƒë·ªß s·ªë d∆∞.")

    elif cmd == "!game":
        now = time.time()
        last = last_game_time.get(uid,0)
        if now-last<300:
            send_message(uid, f"‚è≥ Ch·ªù {int(300-(now-last))}s ƒë·ªÉ ch∆°i l·∫°i.")
        else:
            last_game_time[uid]=now
            games = "\\n".join([
                "1: ƒê√†o v√†ng ‚õèÔ∏è","2: ƒê√†o kim c∆∞∆°ng üíé","3: ƒê√†o m·ªè ‚õèÔ∏è","4: ƒê√≥ng t√†u üö¢",
                "5: L√†m thu√™ üõ†Ô∏è","6: L√†m vi·ªác üíº","7: ƒê√°nh thu√™ ü•ä","8: B√°n h√†ng üõí",
                "9: C∆∞·ªõp ng√¢n h√†ng üè¶","10: Ti·ªÅn mi·ªÖn ph√≠ üéÅ"
            ])
            send_message(uid, "üéÆ Ch·ªçn s·ªë 1‚Äì10 ƒë·ªÉ ch∆°i game:\\n"+games)

    elif cmd.isdigit() and 1<=int(cmd)<=10 and uid in last_game_time:
        reward = random.randint(10_000,1_000_000)
        user["balance"] += reward
        send_message(uid, f"üéâ B·∫°n nh·∫≠n ƒë∆∞·ª£c {reward:,}$! S·ªë d∆∞: {user['balance']:,}$")

    else:
        send_message(uid, "‚ùì L·ªánh kh√¥ng h·ª£p l·ªá. Xem !help ƒë·ªÉ bi·∫øt c√°c l·ªánh.")

@app.route("/help", methods=["GET"])
def help_page():
    return (
        "!tao <t√™n>  ‚Äì t·∫°o t√†i kho·∫£n\\n"
        "!bank       ‚Äì ki·ªÉm tra s·ªë d∆∞\\n"
        "!vay <s·ªë>   ‚Äì vay ti·ªÅn\\n"
        "!travay all/<s·ªë> ‚Äì tr·∫£ n·ª£\\n"
        "!chuyen <stk> <s·ªë> ‚Äì chuy·ªÉn ti·ªÅn\\n"
        "!tx t√†i/x·ªâu <s·ªë> ‚Äì ch∆°i t√†i x·ªâu\\n"
        "!game       ‚Äì ch∆°i mini-game\\n"
        "1‚Äì10         ‚Äì ch·ªçn game sau !game"
    )

if __name__=="__main__":
    app.run(host="0.0.0.0", port=8080)
